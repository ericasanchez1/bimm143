---
title: "Class 9: Halloween Mini Project"
author: "Erica Sanchez (A15787505)"
format: pdf
---

In today's class we will examine some data about candy from the 538 website.

## Import Data

```{r}
candy = read.csv("class09.txt", row.names=1)
head(candy)
```
## Data exploration

> Q1. How many different candy types are in this dataset?

There are `r nrow(candy)` candy in this dataset.

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

> How many chocolate candy types are in the dataset?

```{r}
sum(candy$chocolate)
```

## My favorite candy vs yours

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Twix", ]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

```{r}
library(skimr)
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The last 3 rows are on a 100% scale. They do not follow the zero to one scale.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero or one represents if the candy has the feature (ex: nougat has nougat = 1, chocolate does not have nougat = 0)

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy) +
  aes(x=winpercent) +
  geom_histogram(bins=7)
```

> Q9. Is the distribution of winpercent values symmetrical?

No, it is slightly left-skewed for values below 50%.

> Q10. Is the center of the distribution above or below 50%?

Below 50%

```{r}
mean(candy$winpercent)
```

```{r}
summary(candy$winpercent)
```


> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

- First find all chocolate candy
- Then find their winpercent values
- Calculate the mean
- Do the same for fruity candy and compare the means

```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```

```{r}
fruity.inds <- candy$fruity == 1
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)
```

On average, chocolate is ranked higher than fruity candy.

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruity.win)
```

The difference is statistically significant due to the p-value.

> Q13. What are the five least liked candy types in this set?

```{r}
x <- c(5, 6, 4)
sort(x)
```


```{r}
x[order(x)]
```

The order function returns the indices that make the input sorted.

```{r}
inds <- order(candy$winpercent)
head(candy[inds,], 5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
inds <- order(candy$winpercent)
tail(candy[inds,], 5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)
ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
#| fig-height: 10
#| fig-width: 7
library(ggplot2)
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

```{r}
ggsave("mybarplot.png", height=10)
```
![Exported image that is a bit bigger so I can read it](mybarplot.png)

Add colors to my graph

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "brown"
my_cols[as.logical(candy$bar)] = "orange"
my_cols[as.logical(candy$fruity)] = "red"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols)
```

> Q17. What is the worst ranked chocolate candy?

The worst ranked chocolate candy is Sixlets.

> Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst.

Plot of winpercent vs pricepercent

```{r}
library(ggplot2)
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text(col=my_cols)
```
There are just too many labels in this above plot to be readable. We can use the `ggrepel` package to do a better job of placing labels so they minimize text overlap.

```{r}
library(ggrepel)
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 50)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reeses Miniatures

## 5 Exploring the correlation structure

```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruit are anti-correlated

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and caramel are positively correlated

## 6. Principal Component Analysis

We will perform a PCA of the candy. Key question: do we need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```
```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
ggplot(my_data) +
  aes(x=PC1, y=PC2, label=rownames(my_data)) + 
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols)
```

Add some extra polish to make this a bit nicer

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)
p
```


```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
#library(plotly)
#ggplotly(p)
```

How do the original variables contribute to our PCs? For this we look at the loadings component of our results object i.e. the `pca$rotation` object.

```{r}
head(pca$rotation)
```

Make a barplot with ggplot and order the bars by their value. Recall that you need a data.frame as input for ggplot

```{r}
res <- as.data.frame(pca$rotation)

ggplot(res) +
  aes(PC1, reorder(rownames(res), PC1)) +
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity candies, hard and pluribus are picked up in the positive direction. This makes sense because fruity candies typically come in a pack and are hard.